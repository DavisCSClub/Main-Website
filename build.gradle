buildscript {
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath "org.springframework.boot:spring-boot-gradle-plugin:1.2.3.RELEASE"
	}
}

apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'spring-boot'
apply plugin: 'idea'
apply plugin: 'eclipse'

war {
	baseName = 'ROOT'
}

repositories {
	mavenCentral()
}

dependencies {
	compile "org.springframework.boot:spring-boot-starter-web"

	// Google Utilities Library for Java
	compile "com.google.guava:guava:18.0"

	// Thymeleaf
	compile "org.thymeleaf:thymeleaf-spring4"
	compile "nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:1.2.8"
	compile "org.thymeleaf.extras:thymeleaf-extras-springsecurity3:2.1.2.RELEASE"
	
	// Data Source
	compile "org.springframework.boot:spring-boot-starter-data-jpa"
	compile "org.postgresql:postgresql:9.4-1201-jdbc41"

	// File Upload
	compile "commons-fileupload:commons-fileupload:1.3.1"

	// Security
	compile "org.springframework.boot:spring-boot-starter-security"

	// Testing
	testCompile 'org.springframework.boot:spring-boot-starter-test:1.2.5.RELEASE'
	testCompile 'junit:junit:4.12'
	testCompile 'org.mockito:mockito-all:2.0.2-beta'
	testCompile 'org.powermock:powermock-mockito-release-full:1.6.2'
	testCompile 'org.springframework:spring-test:4.0.5.RELEASE'
}

test {
	testLogging {
		events "passed", "skipped", "failed"

		afterSuite { desc, result ->
			if (!desc.parent) { // will match the outermost suite
				println "Results: ${result.resultType} (${result.testCount} tests, ${result.successfulTestCount} successes, ${result.failedTestCount} failures, ${result.skippedTestCount} skipped)"
			}
		}
	}
}

task wrapper(type: Wrapper) {
	gradleVersion = '2.4'
}

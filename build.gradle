buildscript {
    ext {
        springBootVersion = '1.3.4.RELEASE'
        versionEyeVersion = '1.4.0'
    }

    repositories {
        jcenter()
        mavenCentral()
    }

    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion"
        classpath "org.standardout:gradle-versioneye-plugin:$versionEyeVersion"
    }
}

apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'spring-boot'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'org.standardout.versioneye'

war {
    baseName = 'ROOT'
}

versioneye {
    includeSubProjects = true
}

allprojects {
    apply plugin: 'java'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    repositories {
        mavenCentral()
        maven { url 'https://repo.spring.io/libs-milestone-local' }
        maven { url 'https://repo.spring.io/libs-release-local' }
    }

    ext {
        aspectjVersion = '1.8.7'
        commonsVersion = '1.3.1'
        guavaVersion = '19.0-rc2'
        hibernateVersion = '5.0.5.Final'
        h2Version = '1.4.190'
        jacksonVersion = '2.6.3'
        jadiraVersion = '4.0.0.GA'
        javaxServletVersion = '4.0.0-b01'
        jodaTimeVersion = '2.9'
        junitVersion = '4.12'
        mockitoVersion = '2.0.2-beta'
        postgresVersion = '9.4-1205-jdbc42'
        powerMockVersion = '1.6.3'
        springVersion = '4.3.3.RELEASE'
        springBootVersion = '1.3.4.RELEASE'
        springHateoasVersion = '0.19.0.RELEASE'
        springJpaVersion = '1.9.1.RELEASE'
        springSecurityVersion = '4.1.0.RELEASE'
        thymeleafVersion = '2.1.2.RELEASE'
        thymeleafLayoutVersion = '1.3.1'
    }

    dependencies {
        compile "com.google.guava:guava:$guavaVersion"
        compile "org.springframework:spring-core:$springVersion"
        //compile "org.springframework:spring-context:$springVersion"

        testCompile "junit:junit:$junitVersion"
        testCompile "org.mockito:mockito-all:$mockitoVersion"
        testCompile "org.powermock:powermock-mockito-release-full:$powerMockVersion"
        testCompile "org.springframework:spring-test:$springVersion"
        testCompile "org.springframework.boot:spring-boot-starter-test:$springBootVersion"
    }
}

dependencies {
    compile project(":admin")
    compile project(":config")
    compile project(":core")
    compile project(":dcsc-web")
    compile project(":athena")
    compile project(":utilities")

    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
    providedRuntime 'javax.websocket:javax.websocket-api:1.1'
}

bootRun() {
    Map properties = project.getProperties()
    String templateDir = properties.get("org.dcsc.template.directory")
    String resourceDir = properties.get("org.dcsc.resource.directory")

    jvmArgs = ["-Ddcsc.template.directory=$templateDir",
               "-Ddcsc.resource.directory=$resourceDir"
    ]
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.13'
}


test {
    testLogging.showStandardStreams = true
    testLogging.exceptionFormat = 'full'
    testLogging {
        afterSuite { desc, result ->
            if (!desc.parent) { // will match the outermost suite
                println "Results: ${result.resultType} (${result.testCount} tests, ${result.successfulTestCount} successes, ${result.failedTestCount} failures, ${result.skippedTestCount} skipped)"
            }
        }
    }
}
